{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Asus\\\\Documents\\\\something101\\\\src\\\\components\\\\UploadSection.jsx\",\n  _s = $RefreshSig$();\nimport React, { useRef, useCallback, useEffect } from 'react';\nimport Webcam from 'react-webcam';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst UploadSection = () => {\n  _s();\n  const webcamRef = useRef(null);\n  const [imageSrc, setImageSrc] = React.useState(null);\n  const capture = useCallback(() => {\n    const imageSrc = webcamRef.current.getScreenshot();\n    setImageSrc(imageSrc);\n  }, [webcamRef]);\n  useEffect(() => {\n    // Optional: Log available devices to find the NVIDIA Broadcast camera\n    navigator.mediaDevices.enumerateDevices().then(devices => {\n      devices.forEach(device => {\n        console.log(device.label, device.deviceId);\n      });\n    });\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"bg-white p-8 rounded-lg shadow-lg w-full h-[75vh] flex flex-col items-center justify-center border-2 border-dashed border-gray-300 relative\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"w-full\",\n      children: /*#__PURE__*/_jsxDEV(Webcam, {\n        audio: false,\n        ref: webcamRef,\n        screenshotFormat: \"image/jpeg\",\n        width: \"100%\",\n        height: \"100%\",\n        videoConstraints: {\n          facingMode: \"user\",\n          deviceId: \"f0485ccf24c359cc51dcea65988f0bf53d93d30fc9a7be696c043f78a54fb99c\" // Replace with the actual device ID\n        },\n        style: {\n          objectFit: 'cover'\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 7\n    }, this), imageSrc && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"absolute inset-0 flex items-center justify-center\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"bg-white p-4 rounded-lg border border-gray-300 shadow-lg\",\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"Captured Image:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n          src: imageSrc,\n          alt: \"Captured\",\n          className: \"mt-2 border rounded-lg shadow-lg\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 23,\n    columnNumber: 5\n  }, this);\n};\n_s(UploadSection, \"gOYqTwoEdJOtg1r4oY+ITBWdVD4=\");\n_c = UploadSection;\nexport default UploadSection;\nvar _c;\n$RefreshReg$(_c, \"UploadSection\");","map":{"version":3,"names":["React","useRef","useCallback","useEffect","Webcam","jsxDEV","_jsxDEV","UploadSection","_s","webcamRef","imageSrc","setImageSrc","useState","capture","current","getScreenshot","navigator","mediaDevices","enumerateDevices","then","devices","forEach","device","console","log","label","deviceId","className","children","audio","ref","screenshotFormat","width","height","videoConstraints","facingMode","style","objectFit","fileName","_jsxFileName","lineNumber","columnNumber","src","alt","_c","$RefreshReg$"],"sources":["C:/Users/Asus/Documents/something101/src/components/UploadSection.jsx"],"sourcesContent":["import React, { useRef, useCallback, useEffect } from 'react';\r\nimport Webcam from 'react-webcam';\r\n\r\nconst UploadSection = () => {\r\n  const webcamRef = useRef(null);\r\n  const [imageSrc, setImageSrc] = React.useState(null);\r\n\r\n  const capture = useCallback(() => {\r\n    const imageSrc = webcamRef.current.getScreenshot();\r\n    setImageSrc(imageSrc);\r\n  }, [webcamRef]);\r\n\r\n  useEffect(() => {\r\n    // Optional: Log available devices to find the NVIDIA Broadcast camera\r\n    navigator.mediaDevices.enumerateDevices().then(devices => {\r\n      devices.forEach(device => {\r\n        console.log(device.label, device.deviceId);\r\n      });\r\n    });\r\n  }, []);\r\n\r\n  return (\r\n    <div className=\"bg-white p-8 rounded-lg shadow-lg w-full h-[75vh] flex flex-col items-center justify-center border-2 border-dashed border-gray-300 relative\">\r\n      <div className=\"w-full\">\r\n        <Webcam\r\n          audio={false}\r\n          ref={webcamRef}\r\n          screenshotFormat=\"image/jpeg\"\r\n          width=\"100%\"\r\n          height=\"100%\"\r\n          videoConstraints={{ \r\n            facingMode: \"user\", \r\n            deviceId: \"f0485ccf24c359cc51dcea65988f0bf53d93d30fc9a7be696c043f78a54fb99c\" // Replace with the actual device ID\r\n          }}\r\n          style={{ objectFit: 'cover' }}\r\n        />\r\n      </div>\r\n\r\n      {imageSrc && (\r\n        <div className=\"absolute inset-0 flex items-center justify-center\">\r\n          <div className=\"bg-white p-4 rounded-lg border border-gray-300 shadow-lg\">\r\n            <p>Captured Image:</p>\r\n            <img src={imageSrc} alt=\"Captured\" className=\"mt-2 border rounded-lg shadow-lg\" />\r\n          </div>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default UploadSection;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,MAAM,EAAEC,WAAW,EAAEC,SAAS,QAAQ,OAAO;AAC7D,OAAOC,MAAM,MAAM,cAAc;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAElC,MAAMC,aAAa,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAC1B,MAAMC,SAAS,GAAGR,MAAM,CAAC,IAAI,CAAC;EAC9B,MAAM,CAACS,QAAQ,EAAEC,WAAW,CAAC,GAAGX,KAAK,CAACY,QAAQ,CAAC,IAAI,CAAC;EAEpD,MAAMC,OAAO,GAAGX,WAAW,CAAC,MAAM;IAChC,MAAMQ,QAAQ,GAAGD,SAAS,CAACK,OAAO,CAACC,aAAa,CAAC,CAAC;IAClDJ,WAAW,CAACD,QAAQ,CAAC;EACvB,CAAC,EAAE,CAACD,SAAS,CAAC,CAAC;EAEfN,SAAS,CAAC,MAAM;IACd;IACAa,SAAS,CAACC,YAAY,CAACC,gBAAgB,CAAC,CAAC,CAACC,IAAI,CAACC,OAAO,IAAI;MACxDA,OAAO,CAACC,OAAO,CAACC,MAAM,IAAI;QACxBC,OAAO,CAACC,GAAG,CAACF,MAAM,CAACG,KAAK,EAAEH,MAAM,CAACI,QAAQ,CAAC;MAC5C,CAAC,CAAC;IACJ,CAAC,CAAC;EACJ,CAAC,EAAE,EAAE,CAAC;EAEN,oBACEpB,OAAA;IAAKqB,SAAS,EAAC,6IAA6I;IAAAC,QAAA,gBAC1JtB,OAAA;MAAKqB,SAAS,EAAC,QAAQ;MAAAC,QAAA,eACrBtB,OAAA,CAACF,MAAM;QACLyB,KAAK,EAAE,KAAM;QACbC,GAAG,EAAErB,SAAU;QACfsB,gBAAgB,EAAC,YAAY;QAC7BC,KAAK,EAAC,MAAM;QACZC,MAAM,EAAC,MAAM;QACbC,gBAAgB,EAAE;UAChBC,UAAU,EAAE,MAAM;UAClBT,QAAQ,EAAE,kEAAkE,CAAC;QAC/E,CAAE;QACFU,KAAK,EAAE;UAAEC,SAAS,EAAE;QAAQ;MAAE;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAC/B;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACC,CAAC,EAEL/B,QAAQ,iBACPJ,OAAA;MAAKqB,SAAS,EAAC,mDAAmD;MAAAC,QAAA,eAChEtB,OAAA;QAAKqB,SAAS,EAAC,0DAA0D;QAAAC,QAAA,gBACvEtB,OAAA;UAAAsB,QAAA,EAAG;QAAe;UAAAU,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAG,CAAC,eACtBnC,OAAA;UAAKoC,GAAG,EAAEhC,QAAS;UAACiC,GAAG,EAAC,UAAU;UAAChB,SAAS,EAAC;QAAkC;UAAAW,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAC/E;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACH,CACN;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACE,CAAC;AAEV,CAAC;AAACjC,EAAA,CA7CID,aAAa;AAAAqC,EAAA,GAAbrC,aAAa;AA+CnB,eAAeA,aAAa;AAAC,IAAAqC,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}